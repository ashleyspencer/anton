function checkWidth(){var e=$(window).width(),a=document.getElementsByClassName("carousel-item");if(e<321)for(var t=0;t<a.length;t++){var n="url(public/img/home_slide_mob"+t+".jpg)";$(a[t]).css("background-image",n)}else if(320<e)for(t=0;t<a.length;t++){n="url(public/img/home_slide"+t+".jpg)";$(a[t]).css("background-image",n)}}function showProjects(e){$(".project-a");for(var a=$(".location-a"),t=$(".year-a"),n=0;n<a.length;n++){var o=a[n];$(o).click(filterSelected)}for(n=0;n<t.length;n++){var c=t[n];$(c).click(filterSelected)}$(".mega-nav-container").css("pointer-events","all"),document.getElementsByClassName("mega-nav-container")[0].className="mega-nav-container animIn";var s=document.getElementsByClassName("anchor-mask");setTimeout(function(){for(var e=0;e<s.length;e++)s[e].className="anchor-mask anchor-in"},500)}function filterSelected(e){if($(this).hasClass("location-a")){for(var a=$(".project-a"),t=$(this).attr("data-location"),n=$(".location-a"),o=0;o<a.length;o++){$(n[o]).removeClass("active");var c=$(a[o]).attr("data-location");$(a[o]).removeClass("active"),c==t&&$(a[o]).addClass("active")}$(this).addClass("active")}}function hideProjects(e){$(".mega-nav-container").css("pointer-events","none");var a=document.getElementsByClassName("mega-nav-container")[0];setTimeout(function(){a.className="mega-nav-container animIn animOut"},500);for(var t=document.getElementsByClassName("anchor-mask"),n=0;n<t.length;n++)t[n].className="anchor-mask anchor-in anchor-out"}checkWidth(),$(".carousel").carousel({interval:6e3,pause:"false"}),$(".carousel").on("slid.bs.carousel",function(e){var a=e.to;document.getElementsByClassName("carousel-indicators-slider")[0].style.left=(16.6*a).toString()+"%"}),$('[data-toggle="slide-collapse"]').on("click",function(){$navMenuCont=$($(this).data("target")),$navMenuCont.animate({width:"toggle"},350),$(".menu-overlay").fadeIn(500)}),$(".menu-overlay").click(function(e){$(".navbar-toggle").trigger("click"),$(".menu-overlay").fadeOut(500)}),$(window).resize(checkWidth),$("#projects-link").bind("click",showProjects),$("#services-link").bind("click",hideProjects);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
